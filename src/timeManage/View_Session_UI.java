/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timeManage;

import timeManage.*;
import com.mongodb.BasicDBObject;
import com.mongodb.BasicDBObjectBuilder;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.WriteResult;
import com.mongodb.client.FindIterable;
import java.awt.Window;
import java.beans.Statement;
import java.net.UnknownHostException;
import java.sql.ResultSet;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;

/**
 *
 * @author NK
 */
public class View_Session_UI extends javax.swing.JPanel {

    String session_ID = null;
    String lecturers = null;
    String tag = null;
    String group_ID = null;
    String subject_Code = null;
    String subject = null;
    String scount = null;
    String duration = null;

    DataRetrive dbUtils = new DataRetrive();

    /**
     * Creates new form View_Subjects UI
     */
    public View_Session_UI() {
        initComponents();

        //populate data
        this.populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(620, 740));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("VIEW - SESSION ");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("SEARCH");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 262, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // what to do after a left click in a row

        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();

        session_ID = tblModel.getValueAt(jTable1.getSelectedRow(), 0).toString();
        lecturers = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
        tag = tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString();
        group_ID = tblModel.getValueAt(jTable1.getSelectedRow(), 3).toString();
        subject_Code = tblModel.getValueAt(jTable1.getSelectedRow(), 4).toString();
        subject = tblModel.getValueAt(jTable1.getSelectedRow(), 5).toString();
        scount = tblModel.getValueAt(jTable1.getSelectedRow(), 6).toString();
        duration = tblModel.getValueAt(jTable1.getSelectedRow(), 7).toString();

//        System.out.println("code" + code);
//          System.out.println("nLhrs"+nLhrs+"\nnThrs"+nThrs+"\n");
//        jTextField3.setText(code);
//        jTextField4.setText(name);
//        jComboBox1.setSelectedItem(year);
//        jComboBox2.setSelectedItem(semester);
//        jSpinner1.setValue(Integer.parseInt(nLhrs));
//        jSpinner2.setValue(Integer.parseInt(nThrs));
//        jSpinner3.setValue(Integer.parseInt(nLabhrs));
//        jSpinner4.setValue(Integer.parseInt(nEVhrs));

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private static DBObject createRemoveDBObject(Subjects sub) {
        BasicDBObjectBuilder docBuilder = BasicDBObjectBuilder.start();
        docBuilder.append("Session_ID", sub.subjectCode);
        return docBuilder.get();
    }
//populate data

    private void populate() {

        
        
        String[] columNames = {"SID", "Lecturer(s)", "Tag", "Group-ID", "Subject-code", "Subject", "student-count", "Duration"};

        DefaultTableModel dtm = new DefaultTableModel(columNames, 0);
        DBCursor iterDoc = dbUtils.getAllSession();
        
        while (iterDoc.hasNext()) {
            DBObject obj = iterDoc.next();
            session_ID = (String) obj.get("Session_ID");
            lecturers = (String) obj.get("Lecturers");
            tag = (String) obj.get("Tag");
            group_ID = (String) obj.get("Group_ID");
            subject_Code = obj.get("Subject_Code").toString();
            subject = (String) obj.get("Subject").toString();
            scount = (String) obj.get("Student_Count").toString();
            duration = (String) obj.get("Duration").toString();

            dtm.addRow(new String[]{session_ID, lecturers, tag, group_ID, subject_Code, subject, scount, duration});
//            System.out.println("code3" + code);
        }
        //load data to table (POPULATE DATA)
        jTable1.setModel(dtm);

        
//        DB edb = null;
//        DBCollection col = null;
//        //retrive data
//        try {
//            edb = DBManager.getDatabase();
//        } catch (UnknownHostException e) {
//            JOptionPane.showMessageDialog(null, "Error Connecting To DB");
//        }
//        col = edb.getCollection("Sessions");
//        DBObject resultdb = col.findOne(); //will return a document or null
//
////        System.out.println("col:" + col);
////        System.out.println("col. find is " + col.find());
////        System.out.println("col.findone is " + col.findOne());
////
////        System.out.println("resultdb:" + resultdb);
//        if (resultdb != null) {
//            session_ID = (String) resultdb.get("Session_ID");
//            lecturers = (String) resultdb.get("Lecturers");
//            tag = (String) resultdb.get("Tag");
//            group_ID = (String) resultdb.get("Group_ID");
//            subject_Code = resultdb.get("Subject_Code").toString();
//            subject = (String) resultdb.get("Subject").toString();
//            scount = (String) resultdb.get("Student_Count").toString();
//            duration = (String) resultdb.get("Duration").toString();
//
//           
//
//        } else {
//            System.out.println("resultdb is null");
//        }
//        String[] columNames = {"SID", "Lecturer(s)", "Tag", "Group-ID", "Subject-code", "Subject", "student-count", "Duration"};
//
//        DefaultTableModel dtm = new DefaultTableModel(columNames, 0);
//        DBCursor iterDoc = col.find();
//        while (iterDoc.hasNext()) {
//            DBObject obj = iterDoc.next();
//            session_ID = (String) obj.get("Session_ID");
//            lecturers = (String) obj.get("Lecturers");
//            tag = (String) obj.get("Tag");
//            group_ID = (String) obj.get("Group_ID");
//            subject_Code = obj.get("Subject_Code").toString();
//            subject = (String) obj.get("Subject").toString();
//            scount = (String) obj.get("Student_Count").toString();
//            duration = (String) obj.get("Duration").toString();
//
//            dtm.addRow(new String[]{session_ID, lecturers, tag, group_ID, subject_Code, subject, scount, duration});
////            System.out.println("code3" + code);
//        }
//        //load data to table (POPULATE DATA)
//        jTable1.setModel(dtm);
    }

    private DBObject createDBObject(Subjects subjects) {
        BasicDBObjectBuilder docBuilder = BasicDBObjectBuilder.start();
        docBuilder.append("Subject Code", subjects.getSubjectCode());
        docBuilder.append("SubjectName", subjects.getSubjectName());
        docBuilder.append("Offered Year", subjects.getOfferedYear());
        docBuilder.append("Offerd Semester", subjects.getOfferedSemester());
        docBuilder.append("Lecture Hours", subjects.getnLhrs());
        docBuilder.append("Tutorial Hours", subjects.getnThrs());
        docBuilder.append("Lab Hours", subjects.getnLabhrs());
        docBuilder.append("Evaluation Hours", subjects.getnEvhrs());
        return docBuilder.get();
    }

    public void emptyFields() {
//        jTextField3.setText(null);
//        jTextField4.setText(null);
//        jComboBox1.setSelectedItem(null);
//        jComboBox2.setSelectedItem(null);
//        jSpinner1.setValue(0);
//        jSpinner2.setValue(0);
//        jSpinner3.setValue(0);
//        jSpinner4.setValue(0);
    }
}
