/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timeManage;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.client.FindIterable;
import java.awt.Dimension;
import java.net.UnknownHostException;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.text.Document;
/**
 *
 * @author Thisura
 */


public class TimeTable extends javax.swing.JPanel {

    
        DB SessionDB = null;
        DB ScheduleDB = null;
        DBCollection col=null;
        DBCollection col2=null;
        DBCursor sessionObjects = null;
    /**
     * Creates new form TimeTable
     */
    public TimeTable() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jPanel2 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jDesktopPane2 = new javax.swing.JDesktopPane();

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel3.setText("Select Lecture");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "000150", "000152" }));

        jButton4.setText("Generate");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 861, Short.MAX_VALUE)
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButton4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jDesktopPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton4)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jDesktopPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("  Lecturer  ", jPanel1);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 861, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );

        jLabel1.setText("Select Student Group");

        jButton2.setText("Generate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Y1.S1.IT.01", "Y3.S1.SE.01" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("  Student Group  ", jPanel2);

        jLabel2.setText("Select Room");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A501", "A503" }));

        jButton3.setText("Generate");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 861, Short.MAX_VALUE)
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButton3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("  Room  ", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        //Get selected student group
        String stdGroup = jComboBox1.getSelectedItem().toString();
        ArrayList<String> sessionIdArray = new ArrayList<String>();
        
        Object[][] ttable  = new Object[10][6];
        
        //Get Session data from DB
       try
        {
        SessionDB = DBManager.getDatabase();
        }
        catch (UnknownHostException ex)
        {
        JOptionPane.showMessageDialog(null, "Error When Connecting to DB");
        }
        
        //get sessions table data
        col = SessionDB.getCollection("Sessions");
        sessionObjects =col.find();
        
        
        //Get sessions which matches the student group
        if(sessionObjects != null){
            while(sessionObjects.hasNext()){
                DBObject sessionObj = sessionObjects.next();
                if(sessionObj.get("Group_ID").equals(stdGroup)){
                    if(sessionObj.get("Session_ID") != null){
                        sessionIdArray.add(sessionObj.get("Session_ID").toString());
                    }
                    
                }
            }
        }
        
        //Get Schedule data from DB 
        try
        {
        ScheduleDB = DBManager.getDatabase();
        }
        catch (UnknownHostException ex)
        {
        JOptionPane.showMessageDialog(null, "Error When Connecting to DB");
        }
        
        //get Schedule table data
        col2 = ScheduleDB.getCollection("Schedules");
        DBCursor scheduleObjects =col2.find();
        
        
        
        //Get schedules which matches the sessionid
        if(scheduleObjects != null){
            while(scheduleObjects.hasNext()){
                DBObject scheduleObj = scheduleObjects.next();
                
                int i=0;
                while(i<sessionIdArray.size()){
                    
                    if(scheduleObj.get("session").equals(sessionIdArray.get(i++))){
                        
                        sessionObjects =col.find();
                        if(sessionObjects != null){
                            while(sessionObjects.hasNext()){
                                DBObject sessionObj = sessionObjects.next();
                                
                                if(sessionObj.get("Session_ID").equals(scheduleObj.get("session"))){
                                    
                                    int[] x = searchLocation(scheduleObj.get("day").toString(),scheduleObj.get("startTime").toString());
//                                    System.out.println(sessionObj.get("Duration"));
                                    int duration = Integer.parseInt(sessionObj.get("Duration").toString());
                                    int j=0;
                                    while(j<duration){
                                        ttable[(x[0]+j)][x[1]] = sessionObj.get("Group_ID")+"\n"+sessionObj.get("Subject_Code")+"-"
                                            +sessionObj.get("Subject")+" ("+sessionObj.get("Tag")+")\n"+scheduleObj.get("room");
                                        j++;
                                    }
                                    
                                }
                            }
                        }
                        
                    }
                }
            }
        }
        
        //Set times in timetable
            ttable[0][0] = "8.30-9.30";
            ttable[1][0] = "9.30-10.30";
            ttable[2][0] = "10.30-11.30";
            ttable[3][0] = "11.30-12.30";
            ttable[4][0] = "12.30-13.30";
            ttable[5][0] = "13.30-14.30";
            ttable[6][0] = "14.30-15.30";
            ttable[7][0] = "15.30-16.30";
            ttable[8][0] = "16.30-17.30";
            ttable[9][0] = "17.30-18.30";
            
        //Set titles
        Object[] titles = new Object[] {"", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"};
        
        jDesktopPane1.removeAll();
        try {
           CustomTableModel tt = new CustomTableModel(ttable,titles);           
            jDesktopPane1.add(tt).setVisible(true);
            tt.setSize(jDesktopPane1.getWidth(), jDesktopPane1.getHeight());

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
                                                 
        // TODO add your handling code here:
        
        //Get selected student group
        String lecture = jComboBox3.getSelectedItem().toString();
        
        ArrayList<String> sessionIdArray = new ArrayList<String>();
        
        Object[][] ttable  = new Object[10][6];
        
        //Get Session data from DB
       try
        {
        SessionDB = DBManager.getDatabase();
        }
        catch (UnknownHostException ex)
        {
        JOptionPane.showMessageDialog(null, "Error When Connecting to DB");
        }
        
        //get sessions table data
        col = SessionDB.getCollection("Sessions");
        sessionObjects =col.find();
        
        
        //Get sessions which matches the student group
        if(sessionObjects != null){
            while(sessionObjects.hasNext()){
                DBObject sessionObj = sessionObjects.next();
                
                String str = sessionObj.get("Lecturers").toString();
                str = str.replaceAll("[^a-zA-Z0-9,]", ""); 
                String[] lecturers = str.split(",");
                int k=0;
                while(k<lecturers.length){
                    System.out.println(k+"-->"+lecturers[k]);
                    if(lecturers[k].equals(lecture)){
                        if(sessionObj.get("Session_ID") != null){
                            sessionIdArray.add(sessionObj.get("Session_ID").toString());
                        }

                    }
                    k++;
                }
                
            }
        }
//        System.out.println(sessionIdArray);
        
        //Get Schedule data from DB 
        try
        {
        ScheduleDB = DBManager.getDatabase();
        }
        catch (UnknownHostException ex)
        {
        JOptionPane.showMessageDialog(null, "Error When Connecting to DB");
        }
        
        //get Schedule table data
        col2 = ScheduleDB.getCollection("Schedules");
        DBCursor scheduleObjects =col2.find();
        
        
        
        //Get schedules which matches the sessionid
        if(scheduleObjects != null){
            while(scheduleObjects.hasNext()){
                DBObject scheduleObj = scheduleObjects.next();
                
                int i=0;
                while(i<sessionIdArray.size()){
                    
                    if(scheduleObj.get("session").equals(sessionIdArray.get(i++))){
                        
                        sessionObjects =col.find();
                        if(sessionObjects != null){
                            while(sessionObjects.hasNext()){
                                DBObject sessionObj = sessionObjects.next();
                                
                                if(sessionObj.get("Session_ID").equals(scheduleObj.get("session"))){
                                    
                                    int[] x = searchLocation(scheduleObj.get("day").toString(),scheduleObj.get("startTime").toString());
//                                    System.out.println(sessionObj.get("Duration"));
                                    int duration = Integer.parseInt(sessionObj.get("Duration").toString());
                                    int j=0;
                                    while(j<duration){
                                        ttable[(x[0]+j)][x[1]] = sessionObj.get("Group_ID")+"\n"+sessionObj.get("Subject_Code")+"-"
                                            +sessionObj.get("Subject")+" ("+sessionObj.get("Tag")+")\n"+scheduleObj.get("room");
                                        j++;
                                    }
                                    
                                }
                            }
                        }
                        
                    }
                }
            }
        }
        
        //Set times in timetable
            ttable[0][0] = "8.30-9.30";
            ttable[1][0] = "9.30-10.30";
            ttable[2][0] = "10.30-11.30";
            ttable[3][0] = "11.30-12.30";
            ttable[4][0] = "12.30-13.30";
            ttable[5][0] = "13.30-14.30";
            ttable[6][0] = "14.30-15.30";
            ttable[7][0] = "15.30-16.30";
            ttable[8][0] = "16.30-17.30";
            ttable[9][0] = "17.30-18.30";
            
        //Set titles
        Object[] titles = new Object[] {"", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"};
        
        jDesktopPane3.removeAll();
        try {
           CustomTableModel tt = new CustomTableModel(ttable,titles);           
            jDesktopPane3.add(tt).setVisible(true);
            tt.setSize(jDesktopPane3.getWidth(), jDesktopPane3.getHeight());

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    public int[] searchLocation(String day, String starttime){
        int[] loc = new int[2];
        
        if(starttime.equals("8.30")){
            loc[0] = 0;
        }else if(starttime.equals("9.30")){
            loc[0] = 1;
        }else if(starttime.equals("10.30")){
            loc[0] = 2;
        }else if(starttime.equals("11.30")){
            loc[0] = 3;
        }else if(starttime.equals("12.30")){
            loc[0] = 4;
        }else if(starttime.equals("13.30")){
            loc[0] = 5;
        }else if(starttime.equals("14.30")){
            loc[0] = 6;
        }else if(starttime.equals("15.30")){
            loc[0] = 7;
        }else if(starttime.equals("16.30")){
            loc[0] = 8;
        }else if(starttime.equals("17.30")){
            loc[0] = 9;
        }else{
            return null;
        }
        
        if(day.equals("MONDAY")){
            loc[1] = 1;
        }else if(day.equals("TUESDAY")){
            loc[1] = 2;
        }else if(day.equals("WEDNESDAY")){
            loc[1] = 3;
        }else if(day.equals("THURSDAY")){
            loc[1] = 4;
        }else if(day.equals("FRIDAY")){
            loc[1] = 5;
        }
//        else if(day.equals("SATURDAY")){
//            loc[1] = 0;
//        }else if(day.equals("SUNDAY")){
//            loc[1] = 0;
//        }
        else {
            return null;
        }
        return loc;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
