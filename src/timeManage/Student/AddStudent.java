/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Student;

import DBUtils.DBManager;
import com.mongodb.BasicDBObject;
import com.mongodb.BasicDBObjectBuilder;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.WriteResult;
import java.awt.Color;
import java.awt.Font;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.types.ObjectId;

/**
 *
 * @author Vinoth
 */
public class AddStudent extends javax.swing.JFrame {
    ObjectId ID;
    /**
     * Creates new form AddStudent
     */
    public AddStudent() {
        initComponents();
        displayTable1();
         displayTable2();
          displayTable3();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSem = new javax.swing.JTextField();
        AddButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        yearList = new javax.swing.JTable();
        EditButton1 = new javax.swing.JButton();
        DeleteButton1 = new javax.swing.JButton();
        txtYear = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPro = new javax.swing.JTextField();
        AddButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        proList = new javax.swing.JTable();
        EditButton2 = new javax.swing.JButton();
        DeleteButton2 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        gnumTxt = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        GrpNumList = new javax.swing.JTable();
        AddButton3 = new javax.swing.JButton();
        EditButton3 = new javax.swing.JButton();
        DeleteButton3 = new javax.swing.JButton();
        CreategrpButton = new javax.swing.JButton();
        CreateSubGrpButton3 = new javax.swing.JButton();
        AddTagButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Year and Semester", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Year");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Semester");

        txtSem.setBackground(new java.awt.Color(204, 204, 204));

        AddButton1.setBackground(new java.awt.Color(102, 255, 204));
        AddButton1.setText("Add");
        AddButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButton1ActionPerformed(evt);
            }
        });

        yearList.setBackground(new java.awt.Color(240, 240, 240));
        yearList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Year", "Semester", "Year&Semester"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        yearList.setFocusable(false);
        yearList.setIntercellSpacing(new java.awt.Dimension(0, 0));
        yearList.setRowHeight(25);
        yearList.setShowVerticalLines(false);
        yearList.getTableHeader().setReorderingAllowed(false);
        yearList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yearListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(yearList);

        EditButton1.setBackground(new java.awt.Color(153, 255, 204));
        EditButton1.setText("Edit");
        EditButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButton1ActionPerformed(evt);
            }
        });

        DeleteButton1.setBackground(new java.awt.Color(255, 102, 102));
        DeleteButton1.setText("Remove");
        DeleteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButton1ActionPerformed(evt);
            }
        });

        txtYear.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AddButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(EditButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DeleteButton1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtSem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                        .addComponent(txtYear, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EditButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AddButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DeleteButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Programme", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Programme");

        txtPro.setBackground(new java.awt.Color(204, 204, 204));
        txtPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProActionPerformed(evt);
            }
        });

        AddButton2.setBackground(new java.awt.Color(102, 255, 204));
        AddButton2.setText("Add");
        AddButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButton2ActionPerformed(evt);
            }
        });

        proList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Programme"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        proList.setFocusable(false);
        proList.setShowVerticalLines(false);
        proList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                proListMouseClicked(evt);
            }
        });
        proList.getTableHeader().setFont(new Font("Segoe UI",Font.BOLD,12));
        proList.getTableHeader().setOpaque(false);
        proList.getTableHeader().setBackground(new Color(153,255,255));
        //jTable1.getTableHeader().setForeground(new Color(255,255,255));
        proList.setRowHeight(25);
        jScrollPane3.setViewportView(proList);

        EditButton2.setBackground(new java.awt.Color(153, 255, 204));
        EditButton2.setText("Edit");
        EditButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButton2ActionPerformed(evt);
            }
        });

        DeleteButton2.setBackground(new java.awt.Color(255, 102, 102));
        DeleteButton2.setText("Remove");
        DeleteButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(AddButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(EditButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(DeleteButton2))
                    .addComponent(txtPro, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPro, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Group Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Group Number");

        gnumTxt.setBackground(new java.awt.Color(204, 204, 204));
        gnumTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gnumTxtActionPerformed(evt);
            }
        });

        GrpNumList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Group Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        GrpNumList.setFocusable(false);
        GrpNumList.setShowVerticalLines(false);
        GrpNumList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrpNumListMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(GrpNumList);

        AddButton3.setBackground(new java.awt.Color(102, 255, 204));
        AddButton3.setText("Add");
        AddButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButton3ActionPerformed(evt);
            }
        });

        EditButton3.setBackground(new java.awt.Color(153, 255, 204));
        EditButton3.setText("Edit");
        EditButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButton3ActionPerformed(evt);
            }
        });

        DeleteButton3.setBackground(new java.awt.Color(255, 102, 102));
        DeleteButton3.setText("Remove");
        DeleteButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(AddButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EditButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DeleteButton3))
                    .addComponent(gnumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(gnumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DeleteButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(AddButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EditButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        CreategrpButton.setBackground(new java.awt.Color(153, 153, 255));
        CreategrpButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        CreategrpButton.setForeground(new java.awt.Color(255, 255, 255));
        CreategrpButton.setText("Create GroupID");
        CreategrpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreategrpButtonActionPerformed(evt);
            }
        });

        CreateSubGrpButton3.setBackground(new java.awt.Color(102, 102, 255));
        CreateSubGrpButton3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        CreateSubGrpButton3.setForeground(new java.awt.Color(255, 255, 255));
        CreateSubGrpButton3.setText("Create SubGroup ID");
        CreateSubGrpButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateSubGrpButton3ActionPerformed(evt);
            }
        });

        AddTagButton3.setBackground(new java.awt.Color(102, 51, 255));
        AddTagButton3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        AddTagButton3.setForeground(new java.awt.Color(255, 255, 255));
        AddTagButton3.setText("Add Tag");
        AddTagButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTagButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(CreategrpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CreateSubGrpButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AddTagButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreategrpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddTagButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreateSubGrpButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButton3ActionPerformed
        // TODO add your handling code here:

        int row = GrpNumList.getSelectedRow();
        ID = (ObjectId) GrpNumList.getModel().getValueAt(row, 0);

        DB MyDb = null;
        try
        {
            MyDb = DBManager.getDatabase();
        }
        catch (UnknownHostException e)
        {
            JOptionPane.showMessageDialog(null, "Error When Connecting to DB" + e);
        }
        DBCollection col = MyDb.getCollection("GroupNumber");
        BasicDBObject theQuery = new BasicDBObject();
        theQuery.put("_id", ID);
        WriteResult result = col.remove(theQuery);
        JOptionPane.showMessageDialog(null, "Deleted Succesfully!");
        gnumTxt.setText(null);

        displayTable3();
    }//GEN-LAST:event_DeleteButton3ActionPerformed

    private void EditButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButton3ActionPerformed
        // TODO add your handling code here:
        try
        {
            int groupNumber = Integer.parseInt(gnumTxt.getText());

            if (gnumTxt.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Group Number is Mandatory");
            }
            else
            {
                //Check if name is there in DB
                DB MyDb = null;
                try
                {
                    MyDb = DBManager.getDatabase();
                }
                catch (UnknownHostException e)
                {
                    JOptionPane.showMessageDialog(null, "Error When Connecting to DB : " + e);
                }
                DBCollection col = MyDb.getCollection("GroupNumber");
                BasicDBObject theQuery = new BasicDBObject("_id", ID );
                DBObject result = col.findOne(theQuery);

                if(result == null){
                    //If not add as new building

                    GroupNumber grpnum1 = new GroupNumber(groupNumber);
                    DBObject doc = createDBObject(grpnum1);
                    col.insert(doc);
                    JOptionPane.showMessageDialog(null, "Added Successfully");
                    gnumTxt.setText(null);

                }else{
                    //if yes Edit existing building
                    BasicDBObject query = new BasicDBObject();
                    query.put("_id", ID);

                    BasicDBObject newDocument = new BasicDBObject();
                    newDocument.put("GrpNum", groupNumber);

                    BasicDBObject updateObject = new BasicDBObject();
                    updateObject.put("$set", newDocument);

                    MyDb.getCollection("GroupNumber").update(query, updateObject);
                    JOptionPane.showMessageDialog(null, "Updated Succesfully!");
                    gnumTxt.setText(null);
                }
                displayTable3();
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Insertion Failed  please Fill Details to add!" + e.toString());

        }

    }//GEN-LAST:event_EditButton3ActionPerformed

    private void AddButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButton3ActionPerformed
        // TODO add your handling code here:
        try{
            int gnum = Integer.parseInt(gnumTxt.getText());

            DB MyDb = null;

            if(gnumTxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter the Group Number");

            }
            else{

                try
                {
                    MyDb = DBManager.getDatabase();
                }
                catch (UnknownHostException ex)
                {
                    JOptionPane.showMessageDialog(null, "Error When Connecting to DB");
                }
                DBCollection col = MyDb.getCollection("GroupNumber");
                BasicDBObject theQuery = new BasicDBObject("GrpNum", gnum);
                DBObject result = col.findOne(theQuery);

                if(result==null){

                    GroupNumber grpnum = new GroupNumber(gnum);
                    DBObject doc = createDBObject(grpnum);
                    WriteResult result1 = col.insert(doc);
                    JOptionPane.showMessageDialog(null, "added Successfully");

                    gnumTxt.setText(null);

                    displayTable3();

                }
                else{
                    JOptionPane.showMessageDialog(null, "Already Added");
                }} } catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Insertion Failed  please Fill Details to add!" + e.toString());

                }

    }//GEN-LAST:event_AddButton3ActionPerformed

    private void GrpNumListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrpNumListMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) GrpNumList.getModel();
        int selectedIndex = GrpNumList.getSelectedRow();
        ID= (ObjectId) model.getValueAt(selectedIndex,0);
        gnumTxt.setText(model.getValueAt(selectedIndex, 1).toString());

    }//GEN-LAST:event_GrpNumListMouseClicked

    private void gnumTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gnumTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gnumTxtActionPerformed

    private void DeleteButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButton2ActionPerformed
        // TODO add your handling code here:
        int row = proList.getSelectedRow();
        ID = (ObjectId) proList.getModel().getValueAt(row, 0);

        DB MyDb = null;
        try
        {
            MyDb = DBManager.getDatabase();
        }
        catch (UnknownHostException e)
        {
            JOptionPane.showMessageDialog(null, "Error When Connecting to DB" + e);
        }
        DBCollection col = MyDb.getCollection("Programme");
        BasicDBObject theQuery = new BasicDBObject();
        theQuery.put("_id", ID);
        WriteResult result = col.remove(theQuery);
        JOptionPane.showMessageDialog(null, "Deleted Succesfully!");
        txtPro.setText(null);

        displayTable2();

    }//GEN-LAST:event_DeleteButton2ActionPerformed

    private void EditButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            String programme = txtPro.getText();

            if (programme.length() == 0)
            {
                JOptionPane.showMessageDialog(null, "programme is Mandatory");
            }
            else
            {
                //Check if name is there in DB
                DB MyDb = null;
                try
                {
                    MyDb = DBManager.getDatabase();
                }
                catch (UnknownHostException e)
                {
                    JOptionPane.showMessageDialog(null, "Error When Connecting to DB : " + e);
                }
                DBCollection col = MyDb.getCollection("Programme");
                BasicDBObject theQuery = new BasicDBObject("_id", ID );
                DBObject result = col.findOne(theQuery);

                if(result == null){
                    //If not add as new building

                    Programme programme1 = new Programme(programme);
                    DBObject doc = createDBObject(programme1);
                    col.insert(doc);
                    JOptionPane.showMessageDialog(null, "Added Successfully");
                    txtPro.setText(null);

                }else{
                    //if yes Edit existing building
                    BasicDBObject query = new BasicDBObject();
                    query.put("_id", ID);

                    BasicDBObject newDocument = new BasicDBObject();
                    newDocument.put("programme", programme);

                    BasicDBObject updateObject = new BasicDBObject();
                    updateObject.put("$set", newDocument);

                    MyDb.getCollection("Programme").update(query, updateObject);
                    JOptionPane.showMessageDialog(null, "Updated Succesfully!");
                    txtPro.setText(null);
                }
                displayTable2();
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Insertion Failed  please Fill Details to add!" + e.toString());

        }

    }//GEN-LAST:event_EditButton2ActionPerformed

    private void proListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proListMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) proList.getModel();
        int selectedIndex = proList.getSelectedRow();
        ID= (ObjectId) model.getValueAt(selectedIndex,0);
        txtPro.setText(model.getValueAt(selectedIndex, 1).toString());

    }//GEN-LAST:event_proListMouseClicked

    private void AddButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButton2ActionPerformed
        // TODO add your handling code here:
        try{
            String programme = txtPro.getText();
            DB MyDb = null;

            if(programme.length()==0){
                JOptionPane.showMessageDialog(null, "Enter the programme");

            }
            else{

                try
                {
                    MyDb = DBManager.getDatabase();
                }
                catch (UnknownHostException ex)
                {
                    JOptionPane.showMessageDialog(null, "Error When Connecting to DB");
                }
                DBCollection col = MyDb.getCollection("Programme");
                BasicDBObject theQuery = new BasicDBObject("programme", programme);

                DBObject result = col.findOne(theQuery);

                if(result==null){
                    Programme pro = new Programme(programme);
                    DBObject doc = createDBObject(pro);
                    WriteResult result1 = col.insert(doc);
                    JOptionPane.showMessageDialog(null, "added Successfully");

                    txtPro.setText(null);

                    displayTable2();

                }
                else{
                    JOptionPane.showMessageDialog(null, "Already Added");
                }} } catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Insertion Failed  please Fill Details to add!" + e.toString());

                }
    }//GEN-LAST:event_AddButton2ActionPerformed

    private void txtProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProActionPerformed

    private void DeleteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButton1ActionPerformed
        // TODO add your handling code here:
        int row = yearList.getSelectedRow();
        ID = (ObjectId) yearList.getModel().getValueAt(row, 0);

        DB MyDb = null;
        try
        {
            MyDb = DBManager.getDatabase();
        }
        catch (UnknownHostException e)
        {
            JOptionPane.showMessageDialog(null, "Error When Connecting to DB" + e);
        }
        DBCollection col = MyDb.getCollection("Student");
        BasicDBObject theQuery = new BasicDBObject();
        theQuery.put("_id", ID);
        WriteResult result = col.remove(theQuery);
        JOptionPane.showMessageDialog(null, "Deleted Succesfully!");
        txtYear.setText(null);
        txtSem.setText(null);
        displayTable1();

    }//GEN-LAST:event_DeleteButton1ActionPerformed

    private void EditButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            String year = txtYear.getText();
            String semester = txtSem.getText();
            String Ysem = year+"."+semester;

            if (year.length() == 0)
            {
                JOptionPane.showMessageDialog(null, "Year is Mandatory");
            }
            else
            {
                //Check if name is there in DB
                DB MyDb = null;
                try
                {
                    MyDb = DBManager.getDatabase();
                }
                catch (UnknownHostException e)
                {
                    JOptionPane.showMessageDialog(null, "Error When Connecting to DB : " + e);
                }
                DBCollection col = MyDb.getCollection("Student");
                BasicDBObject theQuery = new BasicDBObject("_id", ID );
                DBObject result = col.findOne(theQuery);

                if(result == null){
                    //If not add as new building

                    Student student = new Student(year,semester);
                    DBObject doc = createDBObject(student);
                    col.insert(doc);
                    JOptionPane.showMessageDialog(null, "Added Successfully");
                    txtYear.setText(null);
                    txtSem.setText(null);

                }else{
                    //if yes Edit existing building
                    BasicDBObject query = new BasicDBObject();
                    query.put("_id", ID);

                    BasicDBObject newDocument = new BasicDBObject();
                    newDocument.put("year", year);
                    newDocument.put("semester", semester);
                    newDocument.put("Ysem", Ysem);

                    BasicDBObject updateObject = new BasicDBObject();
                    updateObject.put("$set", newDocument);

                    MyDb.getCollection("Student").update(query, updateObject);
                    JOptionPane.showMessageDialog(null, "Updated Succesfully!");
                    txtYear.setText(null);
                    txtSem.setText(null);
                }
                displayTable1();
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Insertion Failed  please Fill Details to add!" + e.toString());

        }

    }//GEN-LAST:event_EditButton1ActionPerformed

    private void yearListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearListMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) yearList.getModel();
        int selectedIndex = yearList.getSelectedRow();
        ID= (ObjectId) model.getValueAt(selectedIndex,0);
        txtYear.setText(model.getValueAt(selectedIndex, 1).toString());

        txtSem.setText(model.getValueAt(selectedIndex, 2).toString());

    }//GEN-LAST:event_yearListMouseClicked

    private void AddButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButton1ActionPerformed
        // TODO add your handling code here:
        try{
            String year = txtYear.getText();
            String semester = txtSem.getText();
            String Ysem = year+"."+semester;
            DB MyDb = null;
            if(year.length()==0){
                JOptionPane.showMessageDialog(null, "Enter the year");

            }
            else if(semester.length()==0){
                JOptionPane.showMessageDialog(null, "Enter the semester");
            }
            else{
                try
                {
                    MyDb = DBManager.getDatabase();
                }
                catch (UnknownHostException ex)
                {
                    JOptionPane.showMessageDialog(null, "Error When Connecting to DB");
                }

                Student student = new Student(year,semester);
                DBObject doc = createDBObject(student);

                DBCollection col = MyDb.getCollection("Student");

                BasicDBObject theQuery = new BasicDBObject("Ysem", Ysem);

                DBObject result = col.findOne(theQuery);

                if (result==null){

                    WriteResult result1 = col.insert(doc);
                    JOptionPane.showMessageDialog(null, "added Successfully");

                    txtYear.setText(null);
                    txtSem.setText(null);

                    displayTable1();

                }
                else{
                    JOptionPane.showMessageDialog(null, "Already added");
                }
            } } catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Insertion Failed  please Fill Details to add!" + e.toString());

            }

    }//GEN-LAST:event_AddButton1ActionPerformed

    private void CreategrpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreategrpButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);

        new AddGrpNumber().setVisible(true);
    }//GEN-LAST:event_CreategrpButtonActionPerformed

    private void CreateSubGrpButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateSubGrpButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new AddSubNumber().setVisible(true);
    }//GEN-LAST:event_CreateSubGrpButton3ActionPerformed

    private void AddTagButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTagButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new AddTag().setVisible(true);
    }//GEN-LAST:event_AddTagButton3ActionPerformed

    private void displayTable1(){
          DB MyDb = null;
        DBCursor cursor = null;
        try {
            MyDb = DBManager.getDatabase();
            DBCollection coll = MyDb.getCollection("Student");
            cursor = coll.find();

            String[] columnNames = {"ID","Year", "Semester","Year&Semester" };
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);
           

            while(cursor.hasNext()) {
                DBObject obj = cursor.next();
               // String id = (String)obj.get(".id");
                String year = (String)obj.get("year");
                String semester = (String)obj.get("semester");
                String YS = (String)obj.get("Ysem");
                //String YS = year+"."+semester;
                ObjectId id = (ObjectId)obj.get("_id");
                model.addRow(new Object[] {id, year, semester,YS });
            }
            yearList.setModel(model);
              yearList.getColumnModel().getColumn(0).setMinWidth(0);
             yearList.getColumnModel().getColumn(0).setMaxWidth(0);
            cursor.close(); 
            //MyDb.close();
        }catch(Exception e){
            System.err.println("Error in displayTable() method === "+e);
        }
      
    }
    
     private void displayTable2(){
          DB MyDb = null;
        DBCursor cursor = null;
        try {
            MyDb = DBManager.getDatabase();
            DBCollection coll = MyDb.getCollection("Programme");
            cursor = coll.find();

            String[] columnNames = {"ID","Programme" };
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);
           

            while(cursor.hasNext()) {
                DBObject obj = cursor.next();
               // String id = (String)obj.get(".id");
                String programme = (String)obj.get("programme");
              
                //String YS = year+"."+semester;
                ObjectId id = (ObjectId)obj.get("_id");
                model.addRow(new Object[] {id, programme });
            }
            proList.setModel(model);
              proList.getColumnModel().getColumn(0).setMinWidth(0);
             proList.getColumnModel().getColumn(0).setMaxWidth(0);
            cursor.close(); 
            //MyDb.close();
        }catch(Exception e){
            System.err.println("Error in displayTable() method === "+e);
        }
      
    }
     
      private void displayTable3(){
          DB MyDb = null;
        DBCursor cursor = null;
        try {
            MyDb = DBManager.getDatabase();
            DBCollection coll = MyDb.getCollection("GroupNumber");
            cursor = coll.find();

            String[] columnNames = {"ID","GroupNumber" };
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);
           

            while(cursor.hasNext()) {
                DBObject obj = cursor.next();
               // String id = (String)obj.get(".id");
                int gnum = (int)obj.get("GrpNum");
              
                //String YS = year+"."+semester;
                ObjectId id = (ObjectId)obj.get("_id");
                model.addRow(new Object[] {id, gnum });
            }
            GrpNumList.setModel(model);
              GrpNumList.getColumnModel().getColumn(0).setMinWidth(0);
             GrpNumList.getColumnModel().getColumn(0).setMaxWidth(0);
            cursor.close(); 
            //MyDb.close();
        }catch(Exception e){
            System.err.println("Error in displayTable() method === "+e);
        }
      
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton1;
    private javax.swing.JButton AddButton2;
    private javax.swing.JButton AddButton3;
    private javax.swing.JButton AddTagButton3;
    private javax.swing.JButton CreateSubGrpButton3;
    private javax.swing.JButton CreategrpButton;
    private javax.swing.JButton DeleteButton1;
    private javax.swing.JButton DeleteButton2;
    private javax.swing.JButton DeleteButton3;
    private javax.swing.JButton EditButton1;
    private javax.swing.JButton EditButton2;
    private javax.swing.JButton EditButton3;
    private javax.swing.JTable GrpNumList;
    private javax.swing.JTextField gnumTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable proList;
    private javax.swing.JTextField txtPro;
    private javax.swing.JTextField txtSem;
    private javax.swing.JTextField txtYear;
    private javax.swing.JTable yearList;
    // End of variables declaration//GEN-END:variables

    private DBObject createDBObject(Student student) {
       
        BasicDBObjectBuilder docBuilder = BasicDBObjectBuilder.start();
        
         docBuilder.append("year", student.year);
        docBuilder.append("semester", student.semester);
        docBuilder.append("Ysem", student.Ysem);
        return docBuilder.get();
    }

    private DBObject createDBObject(Programme pro) {
       
          BasicDBObjectBuilder docBuilder = BasicDBObjectBuilder.start();
           docBuilder.append("programme", pro.programme);
           return docBuilder.get();
    }

    private DBObject createDBObject(GroupNumber grpnum) {
        BasicDBObjectBuilder docBuilder = BasicDBObjectBuilder.start();
           docBuilder.append("GrpNum", grpnum.GrpNum);
           return docBuilder.get();
    }
}
